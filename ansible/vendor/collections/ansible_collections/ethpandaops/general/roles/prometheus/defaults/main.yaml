prometheus_user: "prometheus"

prometheus_container_name: "prometheus"
prometheus_container_image: "prom/prometheus:v2.40.7"
prometheus_container_env: {}
prometheus_container_ports:
  - "127.0.0.1:9090:9090"
prometheus_container_volumes:
  - "{{ prometheus_paths_config }}:/etc/prometheus"
  - "{{ prometheus_paths_data }}:/prometheus"

prometheus_container_stop_timeout: "120"
prometheus_container_networks: []

prometheus_paths_data: /data/prometheus/data
prometheus_paths_config: /data/prometheus/etc

prometheus_container_command:
  - '--config.file=/etc/prometheus/prometheus.yml'
  - '--storage.tsdb.path=/prometheus'
  - '--storage.tsdb.retention.size=1GB'
  - '--storage.tsdb.retention.time=2d'

prometheus_config: |
  # my global config
  global:
    scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
    evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
    # scrape_timeout is set to the global default (10s).

  # Alertmanager configuration
  alerting:
    alertmanagers:
      - static_configs:
          - targets:
            # - alertmanager:9093

  # Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
  rule_files:
    # - "first_rules.yml"
    # - "second_rules.yml"

  # A scrape configuration containing exactly one endpoint to scrape:
  # Here it's Prometheus itself.
  scrape_configs:
    # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
    - job_name: "prometheus"

      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.

      static_configs:
        - targets: ["localhost:9090"]
