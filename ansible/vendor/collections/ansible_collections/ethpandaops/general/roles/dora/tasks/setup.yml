- name: Add dora user
  ansible.builtin.user:
    name: "{{ dora_user }}"
  register: dora_user_meta

- name: Setup docker network
  ansible.builtin.include_role:
    name: ethpandaops.general.docker_network
  vars:
    docker_network_name: "{{ dora_docker_network_name }}"

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
    owner: "{{ dora_user }}"
    group: "{{ dora_user }}"
  loop:
    - "{{ dora_datadir }}"
    - "{{ dora_datadir }}/explorer"
    - "{{ dora_db_datadir }}/conf.d"
    - "{{ dora_db_datadir }}/db"

- name: Copy custom postgres config
  ansible.builtin.copy:
    content: "{{ dora_db_custom_postgres_config }}"
    dest: "{{ dora_db_datadir }}/conf.d/custom.conf"
    owner: "{{ dora_user }}"
    group: "{{ dora_user }}"
    mode: '0664'

- name: Setup dora database container
  community.docker.docker_container:
    name: "{{ dora_db_container_name }}"
    image: "{{ dora_db_container_image }}"
    state: '{{ dora_db_enabled | ternary("started", "absent") }}'
    restart_policy: always
    stop_timeout: "{{ dora_db_container_stop_timeout }}"
    ports: "{{ dora_db_container_ports }}"
    volumes: "{{ dora_db_container_volumes }}"
    env: "{{ dora_db_container_env }}"
    networks: "{{ dora_db_container_networks }}"
    pull: "{{ dora_db_container_pull | bool }}"
    user: "{{ dora_user_meta.uid }}"

- name: Create dora config file
  ansible.builtin.copy:
    content: "{{ dora_config }}"
    dest: "{{ dora_datadir }}/explorer/explorer.yaml"
    owner: "{{ dora_user }}"
    group: "{{ dora_user }}"
    mode: '0640'

- name: Create custom config files
  ansible.builtin.copy:
    content: "{{ item.value }}"
    dest: "{{ dora_datadir }}/explorer/{{ item.key }}"
    owner: "{{ dora_user }}"
    group: "{{ dora_user }}"
    mode: '0640'
  loop: "{{ dora_extra_config_files | dict2items }}"

- name: Setup dora
  community.docker.docker_container:
    name: "{{ dora_container_name }}"
    image: "{{ dora_container_image }}"
    image_name_mismatch: recreate
    state: 'started'
    restart_policy: always
    stop_timeout: "{{ dora_container_stop_timeout }}"
    ports: "{{ dora_container_ports }}"
    volumes: "{{ dora_container_volumes }}"
    env: "{{ dora_container_env }}"
    networks: "{{ dora_container_networks }}"
    pull: "{{ dora_container_pull | bool }}"
    user: "{{ dora_user_meta.uid }}"
    command: "{{ dora_container_command }}"
